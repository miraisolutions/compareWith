% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare-git.R
\name{compare_git}
\alias{compare_git}
\alias{compare_with_git}
\alias{compare_git_revisions}
\title{Git comparison}
\usage{
compare_with_git(path = NULL, revision = "HEAD", prompt = FALSE)

compare_git_revisions(
  path = NULL,
  revision_compare = "HEAD",
  revision_against = "@{upstream}",
  prompt = FALSE
)
}
\arguments{
\item{path}{Path to a specific file or directory to be compared. If \code{NULL},
the whole repository is compared.}

\item{revision}{The Git revision to compare against (see 'Details' TODO)}

\item{prompt}{Whether to prompt for revisions via \code{\link[=showPrompt]{showPrompt()}}).}

\item{revision_compare, revision_against}{The Git revisions to compare
(\code{revision_compare} vs. \code{revision_against}) (see 'Details' TODO)}
}
\description{
Compare the local working copy against a Git revision, or the changes between
arbitrary Git revisions. Revisions can be specified as "HEAD", branch names,
commit SHA, etc. (see 'Details' TODO).
}
\details{
TODO: return, details
}
\section{Functions}{
\itemize{
\item \code{compare_with_git}: Compares the local working copy against a specific
Git revision.

\item \code{compare_git_revisions}: Compares changes between arbitrary Git revisions.
}}

\examples{
\dontrun{
# TODO
}
}
\seealso{
\link[=compareWith-addins]{RStudio addins} for file and project comparison
with support for version control (TODO).
}
